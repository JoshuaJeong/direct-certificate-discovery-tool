<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:dcdt="http://direct-test.com/spring/schema/spring-dcdt"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://direct-test.com/spring/schema/spring-dcdt http://direct-test.com/spring/schema/spring-dcdt.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    <!--====================================================================================================
    = TASK EXECUTION
    =====================================================================================================-->
    <beans:bean id="taskExecServiceDns" parent="taskExecService"
        p:corePoolSize="1"
        p:maxPoolSize="5"/>
    
    <beans:bean id="taskExecServiceDnsServer" parent="taskExecService" lazy-init="true" scope="prototype"
        p:corePoolSize="#{ taskExecServiceDns.corePoolSize }"
        p:maxPoolSize="#{ taskExecServiceDns.maxPoolSize }"/>
    
    <beans:bean id="taskExecServiceDnsServerReq" parent="taskExecService" lazy-init="true" scope="prototype"
        p:allowCoreThreadTimeOut="true"
        p:corePoolSize="#{ taskExecServiceDnsServer.corePoolSize * 10 }"
        p:keepAliveSeconds="15"
        p:maxPoolSize="#{ taskExecServiceDnsServer.maxPoolSize * 50 }"/>
    
    <!--====================================================================================================
    = DNS UDP SOCKET ADAPTERS
    =====================================================================================================-->
    <beans:bean id="socketAdapterUdpDnsServer" class="gov.hhs.onc.dcdt.service.dns.server.DnsServerUdpSocketAdapter" parent="socketAdapterUdp" abstract="true"/>
    
    <!--suppress SpringBeanConstructorArgInspection -->
    <beans:bean id="socketAdapterUdpDnsServerImpl" class="gov.hhs.onc.dcdt.service.dns.server.impl.DnsServerUdpSocketAdapterImpl"
        parent="socketAdapterUdpDnsServer" lazy-init="true" scope="prototype">
        <beans:property name="options">
            <beans:map>
                <beans:entry key="#{ T(java.net.StandardSocketOptions).SO_REUSEADDR }" value="true" value-type="java.lang.Boolean"/>
            </beans:map>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = DNS TCP SERVER SOCKET ADAPTERS
    =====================================================================================================-->
    <beans:bean id="socketAdapterTcpServerDnsServer" class="gov.hhs.onc.dcdt.service.dns.server.DnsServerTcpServerSocketAdapter" parent="socketAdapterTcpServer"
        abstract="true"/>
    
    <!--suppress SpringBeanConstructorArgInspection -->
    <beans:bean id="socketAdapterTcpServerDnsServerImpl" class="gov.hhs.onc.dcdt.service.dns.server.impl.DnsServerTcpServerSocketAdapterImpl"
        parent="socketAdapterTcpServerDnsServer" lazy-init="true" scope="prototype">
        <beans:property name="options">
            <beans:map>
                <beans:entry key="#{ T(gov.hhs.onc.dcdt.net.sockets.SocketAdapterOptions).BACKLOG }" value="#{ taskExecServiceDnsServerReq.maxPoolSize }"
                    value-type="java.lang.Integer"/>
                <beans:entry key="#{ T(java.net.StandardSocketOptions).SO_REUSEADDR }" value="true" value-type="java.lang.Boolean"/>
            </beans:map>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = DNS TCP SOCKET ADAPTERS
    =====================================================================================================-->
    <beans:bean id="socketAdapterTcpDnsServer" class="gov.hhs.onc.dcdt.service.dns.server.DnsServerTcpSocketAdapter" parent="socketAdapterTcp" abstract="true"/>
    
    <!--suppress SpringBeanConstructorArgInspection -->
    <beans:bean id="socketAdapterTcpDnsServerImpl" class="gov.hhs.onc.dcdt.service.dns.server.impl.DnsServerTcpSocketAdapterImpl"
        parent="socketAdapterTcpDnsServer" lazy-init="true" scope="prototype">
        <beans:property name="options">
            <beans:map>
                <beans:entry key="#{ T(java.net.StandardSocketOptions).SO_REUSEADDR }" value="true" value-type="java.lang.Boolean"/>
            </beans:map>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = DNS SERVER CONFIG
    =====================================================================================================-->
    <beans:bean id="dnsServerConfig" class="gov.hhs.onc.dcdt.service.dns.config.DnsServerConfig" abstract="true"/>
    <beans:bean id="dnsServerConfigImpl" class="gov.hhs.onc.dcdt.service.dns.config.impl.DnsServerConfigImpl" parent="dnsServerConfig" abstract="true"/>
    
    <!--====================================================================================================
    = DNS SERVER
    =====================================================================================================-->
    <beans:bean id="dnsServer" class="gov.hhs.onc.dcdt.service.dns.server.DnsServer" abstract="true"/>
    <beans:bean id="dnsServerImpl" class="gov.hhs.onc.dcdt.service.dns.server.impl.DnsServerImpl" parent="dnsServer" abstract="true"/>
    
    <beans:bean id="dnsServer1" parent="dnsServerImpl">
        <beans:constructor-arg name="config">
            <!--suppress SpringPlaceholdersInspection -->
            <beans:bean parent="dnsServerConfigImpl"
                p:host-ref="ipAddrLocalAny"
                p:port="${dcdt.instance.dns.server.1.port}"
                p:name="dnsServer1"
                p:nameDisplay="DNS Server 1"/>
        </beans:constructor-arg>
    </beans:bean>
</beans:beans>